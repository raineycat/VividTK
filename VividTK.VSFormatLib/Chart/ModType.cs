namespace VividTK.VSFormatLib.Chart;

public enum ModType
{ 
    unknown,
    prx,
    prxb,
    prxc,
    pry,
    pryb,
    pryc,
    prsx,
    pra,
    przm,
    przmb,
    przx,
    przy,
    prrx,
    prry,
    prrz,
    prrzb,
    shxs,
    shxp,
    shxa,
    shys,
    shyp,
    shya,
    scrollspeed,
    noterot,
    velocity,
    spinradius,
    spiny,
    spinx,
    driven,
    beat,
    wave,
    hom,
    boost_distance,
    boost_time,
    yoffset,
    notealp,
    przmc,
    prxd,
    pryd,
    prct,
    prcb,
    prcl,
    prcr,
    prvib,
    shct,
    shft,
    shcb,
    shfb,
    shcl,
    shfl,
    shcr,
    shfr,
    scrollind0,
    scrollind1,
    scrollind2,
    scrollind3,
    scrollind4,
    scrollind5,
    scrollind6,
    drawdist,
    pburstleft,
    pburstright,
    particlexpower,
    particleypower,
    uialpha,
    fx_contrast,
    fx_chroma_distort,
    fx_film,
    fx_glow,
    fx_particleglow,
    pburstspeed,
    freeze
}

public static class ModTypeHelper
{
    // Check if the MSB is set
    public static bool IsChartSpecific(ModType type) => ((byte)type & 128) > 0; 
    
    public static float GetModWeight(ModType type)
    {
        if (IsChartSpecific(type))
        {
            return -1;
        }
        
        return type switch {
            ModType.unknown => 0f,
            ModType.prx => 2f,
            ModType.prxb => 2f,
            ModType.prxc => 2f,
            ModType.pry => 2f,
            ModType.pryb => 2f,
            ModType.pryc => 2f,
            ModType.prsx => 2f,
            ModType.pra => 2f,
            ModType.przm => 2f,
            ModType.przmb => 2f,
            ModType.przx => 2f,
            ModType.przy => 2f,
            ModType.prrx => 2f,
            ModType.prry => 2f,
            ModType.prrz => 2f,
            ModType.prrzb => 2f,
            ModType.shxs => 1.5f,
            ModType.shxp => 1.5f,
            ModType.shxa => 1.5f,
            ModType.shys => 1.5f,
            ModType.shyp => 1.5f,
            ModType.shya => 1.5f,
            ModType.scrollspeed => 0f,
            ModType.noterot => 2.5f,
            ModType.velocity => 2f,
            ModType.spinradius => 2f,
            ModType.spiny => 2f,
            ModType.spinx => 2f,
            ModType.driven => 4f,
            ModType.beat => 1.5f,
            ModType.wave => 2.5f,
            ModType.hom => 2f,
            ModType.boost_distance => 2.5f,
            ModType.boost_time => 2.5f,
            ModType.yoffset => 1.5f,
            ModType.notealp => 1.5f,
            ModType.przmc => 1f,
            ModType.prxd => 1f,
            ModType.pryd => 1f,
            ModType.prct => 1f,
            ModType.prcb => 1f,
            ModType.prcl => 1f,
            ModType.prcr => 1f,
            ModType.prvib => 1f,
            ModType.shct => 1f,
            ModType.shft => 1f,
            ModType.shcb => 1f,
            ModType.shfb => 1f,
            ModType.shcl => 1f,
            ModType.shfl => 1f,
            ModType.shcr => 1f,
            ModType.shfr => 1f,
            ModType.scrollind0 => 1.5f,
            ModType.scrollind1 => 1.5f,
            ModType.scrollind2 => 1.5f,
            ModType.scrollind3 => 1.5f,
            ModType.scrollind4 => 1.5f,
            ModType.scrollind5 => 1.5f,
            ModType.scrollind6 => 1.5f,
            ModType.drawdist => 0f,
            ModType.pburstleft => 0.5f,
            ModType.pburstright => 0.5f,
            ModType.particlexpower => 0.5f,
            ModType.particleypower => 0.5f,
            ModType.uialpha => 0f,
            ModType.fx_contrast => 0.5f,
            ModType.fx_chroma_distort => 0.5f,
            ModType.fx_film => 1f,
            ModType.fx_glow => 1f,
            ModType.fx_particleglow => 0.5f,
            ModType.pburstspeed => 0.5f,
            ModType.freeze => 2f,
            _ => throw new ArgumentOutOfRangeException(nameof(type), type, null)
        };
    }
}